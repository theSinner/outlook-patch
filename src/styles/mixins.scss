@import './variables.scss';

$sizeIndexes: (
  0: 0,
  100: $sizing_scale100,
  200: $sizing_scale200,
  300: $sizing_scale300,
  400: $sizing_scale400,
  500: $sizing_scale500,
  550: $sizing_scale550,
  600: $sizing_scale600,
  650: $sizing_scale650,
  700: $sizing_scale700,
  750: $sizing_scale750,
  800: $sizing_scale800,
  850: $sizing_scale850,
  900: $sizing_scale900,
  950: $sizing_scale950,
  1000: $sizing_scale1000,
  1200: $sizing_scale1200,
  1400 : $sizing_scale1400,
  1600 : $sizing_scale1600,
  2400 : $sizing_scale2400,
  3200 : $sizing_scale3200,
  4800 : $sizing_scale4800
);

$sizeProperties: (
  g: gap,
  pb: padding-block,
  pi: padding-inline,
  mb: margin-block,
  mi: margin-inline,
);

@mixin transition($transition) {
  -moz-transition: $transition;
  -o-transition: $transition;
  -ms-transition: $transition;
  -webkit-transition: $transition;
  transition: $transition;
}

@mixin grid($num-cols) {
  @for $col from 1 through $num-cols {
    &[cols="#{$col}"] {
      flex-grow: $col / $num-cols;
      flex-shrink: 1;
      flex-basis: min-content;
      width: percentage($col / $num-cols);
    }
  }
}

@function getSize($number) {
  @return map-get($sizeIndexes, $number);
}

@mixin sizeProperies($property) {
  @each $key, $size in $sizeIndexes {
    .#{$property}-#{$key} {
      #{map-get($sizeProperties, $property)}: $size;
    }
  }
}